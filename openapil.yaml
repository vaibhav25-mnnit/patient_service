openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:4000
    description: Generated server url
tags:
  - name: Patient
    description: API for managing Patients
paths:
  /patients/{id}:
    get:
      tags:
        - Patient
      summary: Get Details for Single Patient Based on id
      operationId: getPatient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientResponseDTO'
    put:
      tags:
        - Patient
      summary: Update a Patient
      operationId: updatePatient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientResponseDTO'
    delete:
      tags:
        - Patient
      summary: Delete a Patient
      operationId: deletePatientController
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /patients:
    get:
      tags:
        - Patient
      summary: Get Details of All Patients
      operationId: getAllPatients
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientResponseDTO'
    post:
      tags:
        - Patient
      summary: Create a New Patient
      operationId: createPatient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PatientResponseDTO'
  /patients/hello:
    get:
      tags:
        - Patient
      operationId: hello
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    PatientRequestDTO:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 0
        email:
          type: string
          minLength: 1
        address:
          type: string
          minLength: 1
        dateOfBirth:
          type: string
          minLength: 1
        registeredDate:
          type: string
      required:
        - address
        - dateOfBirth
        - email
        - name
    PatientResponseDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        address:
          type: string
        dateOfBirth:
          type: string
